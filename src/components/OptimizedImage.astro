---
interface Props {
  src: string
  alt: string
  width?: number
  height?: number
  loading?: 'lazy' | 'eager'
  decoding?: 'sync' | 'async' | 'auto'
  class?: string
  sizes?: string
  quality?: number
  priority?: boolean
}

const {
  src,
  alt,
  width,
  height,
  loading = 'lazy',
  decoding = 'async',
  class: className,
  sizes,
  quality = 80,
  priority = false,
} = Astro.props

// Generar diferentes tamaÃ±os de imagen para responsive
const generateSrcSet = (baseSrc: string) => {
  const widths = [320, 640, 768, 1024, 1280, 1920]
  return widths.map(w => `${baseSrc}?w=${w}&q=${quality} ${w}w`).join(', ')
}

const defaultSizes = sizes || '(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 25vw'
---

<img
  src={`${src}?w=${width || 640}&q=${quality}`}
  srcset={generateSrcSet(src)}
  sizes={defaultSizes}
  alt={alt}
  width={width}
  height={height}
  loading={priority ? 'eager' : loading}
  decoding={decoding}
  class={className}
  referrerpolicy="no-referrer"
  onerror="this.style.display='none'"
  onload="this.style.opacity='1'"
  style="opacity: 0; transition: opacity 0.3s ease-in-out;"
/>
