---
interface Props {
  currentPage: number
  totalPages: number
  baseUrl?: string
}

const { currentPage, totalPages, baseUrl = '' } = Astro.props

// Generar array de páginas a mostrar
const generatePageNumbers = () => {
  const delta = 2 // Páginas a mostrar a cada lado de la actual
  const range = []
  const rangeWithDots = []

  for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {
    range.push(i)
  }

  if (currentPage - delta > 2) {
    rangeWithDots.push(1, '...')
  } else {
    rangeWithDots.push(1)
  }

  rangeWithDots.push(...range)

  if (currentPage + delta < totalPages - 1) {
    rangeWithDots.push('...', totalPages)
  } else {
    if (totalPages > 1) rangeWithDots.push(totalPages)
  }

  return rangeWithDots
}

const pageNumbers = totalPages > 1 ? generatePageNumbers() : []
---

{
  totalPages > 1 && (
    <nav
      class="flex flex-wrap justify-center items-center gap-2 mt-6"
      role="navigation"
      aria-label="Navegación de páginas del catálogo"
    >
      <button
        type="button"
        class="px-3 py-1.5 rounded-md border bg-white  text-contrast-high border-gray-300  hover:bg-gray-50  text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1"
        data-pagination="prev"
        disabled={currentPage === 1}
        aria-label={currentPage === 1 ? 'Página anterior (no disponible)' : `Ir a página ${currentPage - 1}`}
      >
        <span class="sr-only">Página </span>Anterior
      </button>

      {pageNumbers.map(pageNumber => {
        if (pageNumber === '...') {
          return (
            <span class="px-2 py-1.5 text-contrast-medium text-sm" aria-hidden="true">
              …
            </span>
          )
        }

        const isCurrentPage = pageNumber === currentPage
        return (
          <button
            type="button"
            class={`px-3 py-1.5 rounded-md border text-sm font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 ${
              isCurrentPage
                ? 'bg-blue-600 border-blue-600 hover:bg-blue-700'
                : 'bg-white text-contrast-high border-gray-300 hover:bg-gray-50'
            }`}
            data-pagination="page"
            data-page={pageNumber}
            aria-label={isCurrentPage ? `Página actual, página ${pageNumber}` : `Ir a página ${pageNumber}`}
            aria-current={isCurrentPage ? 'page' : undefined}
          >
            {pageNumber}
          </button>
        )
      })}

      <button
        type="button"
        class="px-3 py-1.5 rounded-md border bg-white  text-contrast-high border-gray-300  hover:bg-gray-50  text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1"
        data-pagination="next"
        disabled={currentPage === totalPages}
        aria-label={currentPage === totalPages ? 'Página siguiente (no disponible)' : `Ir a página ${currentPage + 1}`}
      >
        Siguiente<span class="sr-only"> página</span>
      </button>

      <div class="sr-only" aria-live="polite" aria-atomic="true">
        Página {currentPage} de {totalPages}
      </div>
    </nav>
  )
}
